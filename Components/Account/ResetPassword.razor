@page "/resetPassword"
@using System.ComponentModel.DataAnnotations
@using GlomensioApp.Commons
@using GlomensioApp.Services.Accounts
@using GlomensioApp.Services.Accounts.Models
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
<style>
    body, html {
        height: 100%;
        width: 100%;
        margin: 0;
        font-family: Arial, sans-serif;
        background-image: url('images/background.jpg');
        background-repeat: no-repeat;
        background-position: center;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .login-container {
        background-color: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        min-width: 400px;
        width: 100%;
    }

</style>

<MudContainer>
    <div class="login-container">
        <MudText Typo="Typo.h4" Style="font-weight: bold; color: chocolate">Reset password</MudText>
        <MudTextField @bind-Value="model.otp" Placeholder="Enter OTP" Variant="Variant.Outlined" Clearable="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Email" AdornmentColor="Color.Tertiary" Immediate="true" Style="color: black;" />

        <MudTextField @bind-Value="model.Password" Placeholder="New Password" Variant="Variant.Outlined" Clearable="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Lock" AdornmentColor="Color.Tertiary" Immediate="true" Style="color: black;" For="@(() => model.Password)" InputType="InputType.Password" />

        <MudTextField @bind-Value="model.ConfirmPassword" Placeholder="Confirm password" Variant="Variant.Outlined" Clearable="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Lock" AdornmentColor="Color.Tertiary" Immediate="true" Style="color: black;" For="@(() => model.ConfirmPassword)" InputType="InputType.Password" />
        <MudCardHeader></MudCardHeader>
        <MudButton Variant="Variant.Filled" DropShadow="false" Color="Color.Primary" @onclick="ResetPasswordOtp">Update password</MudButton>


        @if (showError)
        {
            <MudText Typo="Typo.body2" Color="@Color.Error">
                @errorMessage
            </MudText>
        }
    </div>
</MudContainer>
@code {
    public class ResetPassswordArg
    {
        [Required]
        public string Email { get; set; }
       
        [Required]
        public string otp { get; set; }

        [Required]
        public string Password { get; set; }

        [Required]
        public string ConfirmPassword { get; set; }
    }
    ResetPassswordArg model = new ResetPassswordArg();
    private bool showError = false;
    private string errorMessage = string.Empty;
    private async Task ResetPasswordOtp()
    {
        try
        {

            var result = await AccountService.ResetPasswordAsync(new ResetPasswordRequest
                {
                    Email = StaticVariable.Email,
                    Otp = model.otp,
                    NewPassword = model.Password
                });

            if (result != null)
            {
                // Điều hướng tới trang đăng nhập sau khi đặt lại mật khẩu thành công
                NavigationManager.NavigateTo("/");
            }
            else
            {
                showError = true;
            }
        }
        catch (Exception ex)
        {
            showError = true;
            errorMessage = "An error occurred: " + ex.Message;
        }
    }
}
}

